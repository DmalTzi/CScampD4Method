import java.util.Scanner;

public class LabQ3Medium {
    /*  โจทย์:
     *  เขียน method pairValue โดยให้หาคู่ของแต่ละตัวเลข โดยคู่จะต้องอยู่ติดกัน
     *  และคู่นั้นจะต้องมีได้แค่หนึ่งคู่ โดยให้เก็บค่าตัวเลขพวกนั้นและ return ออกไป
     *  แต่ถ้าหากไม่มีคู่ใดๆเลยที่ติดกัน ให้ return -1 ออกไป
     *  ข้อมูลนำเข้า:
     *      บรรทัดแรกรับจำนวนขนาดของ array คือ n เป็นตัวเลข ขนาด 0 < n <= 20
     *      บรรทัดสองรับตัวเลข n ตัว โดยแต่ละตัวขั้นด้วย spacebar
     *  ข้อมูลส่งออก:
     *      ผลลัพธ์จากการหาคู่ใน arr
     *  
     *  ตัวอย่าง:
     *      ข้อมูลนำเข้า:
     *          3
     *          1 2 2
     *      ข้อมูลส่งออก:
     *          2
     *      อธิบาย:
     *          เพราะว่า มี 2 ที่เป็นตัวคู่ติดกัน
     * 
     *  ตัวอย่าง:
     *      ข้อมูลนำเข้า:
     *          4
     *          2 2 2 2
     *      ข้อมูลส่งออก:
     *          2 2
     *      อธิบาย:
     *          เพราะว่า index ที่ 0 คู่กับ index ที่ 1 จึงได้ คู่ 2 ตัวแรก
     *          index ที่ 2 คู่กับ index ที่ 3 จึงได้อีกคู่ 2 อีกตัว
     * 
     *  ตัวอย่าง:
     *      ข้อมูลนำเข้า:
     *          4
     *          2 2 1 1
     *      ข้อมูลส่งออก:
     *          2 1
     * 
     *  ตัวอย่าง:
     *      ข้อมูลนำเข้า:
     *          4
     *          1 4 3 4
     *      ข้อมูลส่งออก:
     *          -1
     *      อธิบาย:
     *          ไม่เจอคู่ใดๆที่ติดกัน
     */
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] arr = new int[n];
        for (int i = 0; i < n; i++) arr[i] = sc.nextInt();
        /*  อธิบายโค้ดด้านบน:
         *  รับข้อมูลข้อมูลสองบรรทัด
         *      บรรทัดแรกรับจำนวนขนาดของ array เก็บไว้ในตัวแปร n
         *      บรรทัดสองรับตัวเลข n ตัว แต่ละตัวขั้นด้วย spacebar ตย1.
         *          ตย1.    3
         *                  1 2 3
         */
        /* Start code at here */
        String cntValue = pairValue(arr);

        System.out.println("result " + cntValue);
        sc.close();
    }

    static String pairValue(int[] arr) {

    }
    
}